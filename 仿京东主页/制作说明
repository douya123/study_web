练习看自己学html，css，JavaScript到什么程度了。
下面写制作的过程以及自己学到的或者注意的一些东西；（代码自己写，网页上的素材和颜色字体之类我都直接用它的）
1.第一步是整个页面的布局：
    css部分：
        1.初始化：写到哪里了，哪里不对就添上去

收获知识点：
    1.我之前在写导航的时候一般都是每一个li margin多少然后把li变为inline-block；然后加border-right加边框，然后我发现直接在后面加li写一个间距更好控制；
    2.在写京东图标的时候，box-shadw的用法，感觉也学习了
    3.发现一些有用的，以前没有注意的
        a 标签是横着排列的（多个a标签）
        li 标签是竖着排列的（多个li标签）
        dl dt dd 标签也都是竖着排列的，好像目前就只有a标签是横着排列的，
        然后总结一个东西：
            在没有二级点开的情况下，就用a标签来排列就好了，如果有像鼠标经过要出现二级菜单的就用li标签，dl那一类，就用来排列就好了
    4.get到了overflow：hidden原来可以让没有设置宽和高的盒子被撑起来；
    5.注意自己padding和margin不要用错了，padding的border才是整个盒子都有的，margin的话margin的那一部分就没有border
    6.position是一些问题：
        absolute根据父元素的relative来，我今天没注意把兄弟节点上的一个元素设为relative了之后弄了很久说怎么不对齐。。。（手动尴尬，以后要多注意这些问题）
        还有遇到一个问题：
            我在弄二级菜单和一级菜单看起来像一起的那个效果的时候：发现了一个问题，没有去深想：以后遇到了解答了在补回来
                就是我在设置层级的时候，zindex层级高的要盖过层级低的，但是遇到一个设置好了之后也不行，然后需要把它父元素和兄弟元素的地址都设置为relative才可以。
                代码在这下面：
                    .services {
                        /* 这个class是为了定位二级菜单右对齐而设置的 */
                        position: relative;
                    }
                    .services-font {
                        position: relative;
                        /* 为什么这里要和上面services一起双重的position：relative才能把中间的白线去掉？ */
                        height: 28px;
                        padding: 0 7px;
                        border: 1px solid #e3e4e5;
                    }
    7.制作一级菜单点出来的二级菜单看起来像是一块的的方法：就是用层级zindex来盖过去：注意是哪边的border要多设置别的边框的长度；还有其中的一些问题我没有解决，就是线条像断了一样的问题
        我之前想是用一个绝对定位的小2倍border的方法来从新掩盖，但是可能操作有点复杂。以后遇到了总结在这下面
    8.在使用float时，不要随便的用，会影响布局，可以的话就用inline-block代替
    9.元素选择器的进一步认识学习：
        (1) :last-child
            /* 选择list属性中的最后一个list属性中的dd的下边框线为空 */
                .list:last-child dd {
                    border-bottom: none;
                }
    10.js中children的使用还不懂    和childnodes的区别又是什么？
            childnodes 的话会把所有类型的子节点都选出来，而children的话只选出了html元素节点。操作元素的话就children要方便很多，childnode是还有去判断节点nodetype；
    11.如果直接设置变量，然后赋值里加了innerhtml，可以读取，但是不能修改，我遇到几次都是是这样，解决的方法就是不要直接给变量赋innerhtml，在后边改变的时候分开写；
    12.要获取a标签里的innerhtml的话，我使用children来获取的，直接children的话显示的是htmlco--什么，我忘了后边的单词怎么写了，要获取里边的元素要用children[0].innerhtml；
    13.遇到写head里边的nav加new图片的时候，发现ie浏览器里的absolute要被前面的文字部分影响，所以要把img写在文字的前面去
    14.如果要兼容ie7/8的话就就少用inline-block，用block加float代替 还有一个就是inline-block可以用父元素的text-algin：center来居中，很方便
    15.css选择器：http://www.w3school.com.cn/cssref/css_selectors.asp   我要好好的学学这些选择器的使用，感觉很有用，而且还支持ie，卧槽。
    16.关于用js改变伪元素：after的方法：
        通过改变父节点的classname来改变伪类的属性，但是再css中要写一个这个classname：after的伪元素出来，不然也没用
    17.制作图片轮播效果遇到的问题以及解决方法：
        第一步：我制作的是点击左下角的小圆点切换图片
            这个算比较简单，主要的问题最开始的时候是出现在布局上，本来可以采用div里加div的方式嵌套做，但是我看着jd上用的:after做的，我就也照着那个做，但是最后发现不知道怎么用js获取伪元素的，所以只能采用改变父元素的class来改样式，（好像js不能获取到伪元素）
            做这一个切换主要还是就是和选项卡的制作方式一样：鼠标点击到哪一个上this的样式发生改变，除开this以外的变为原来的样式。this对于的图片编号的层级变为比this以为的zindex大1，而所有的this以为的zindex变为原来的
        第二步：我制作的是图片点击上一张和下一张按钮的切换效果：
            其中图片的显示和对应小圆点的样式改变用的代码都是第一步的方式，可以直接复制；
            其中主要的这几个问题
                1.确定当前是第多少张图片：因为涉及到又可以从小圆点改变，又可以上下键切换，还有之后的定时器改变：所以要设置一个全局的变量j来储存当前是第几张图片，获得之前第一步设置的属性index的值。 让只要是图片进行了改变的就return一个值；
                2.然后就是设置点击事件：这里要分开说上一张和下一张，因为不一样：
                    上一张采用的是在全局变量j的数值上j--;   就是数组中的j-1张图片的zindex大1，其他变为原来的zindex；
                        j--注意的问题：n为数组的长度，而下标为数组长度减1个
                                if (j > 0) {
                                    j--;
                                } else {
                                    j = n - 1;
                                }
                                aIndicator[j].className = 'indicator';
                                aSlideshowPhoto[j].className = 'appear';
                                先判断再减：先判断再减的话最小就是0，最大就是数组个数减1；
                    下一张采用的是在全局变量j的数值上j++;
                        我开的时候是直接先加，然后发现如果用上边这个先判断的方法的话，应该也是一样的意思吧，那我之前就想复杂了。但是我还是说一下我之前是写法：
                                aIndicator[j+1].className = 'indicator';
                                aSlideshowPhoto[j+1].className = 'appear';
                                if (j < n-2) {
                                    j++;
                                } else {
                                    j = -1;
                                }
                                return j;
                            我采用的是先加，然后加了之后显示，然后再判断
                                所以搞清楚：显示的是j+1的值，返回的也是j+1的值，所以这里是不能让j+1的值大于和数组的长度减一； 计算方法：j+1 < n - 1; 得出：j < n - 2;并且要让第一张为j+1 = 0； 然后最小的j应该为 -1；
                    其实不管先判断还是先加就是一样的：要清楚的就是下标的值要大于0，小于数组的长度减1；
        第三步：设置定时器：setinterval，让图片自动循环
                    要注意的是设置第一个定时器的时候不用关闭，然后在设置后边关闭开启的时候就要关闭之前所有的定时器再开；
                    要给定时器保存到变量，为了好关闭，，
                    还有很重要的一点，定时器不要写在循环里了。写在循环里了定时器会同时设置很多个；
        第四步：设置当鼠标移入图片和移入小点的时候就要关闭定时器：
                    1)这个我之前花费了我很多的时间：因为这些进入移出关开定时器全部得再循环里进行，所有我开始的时候就有点不知道怎么做，然后我想到了一个办法，就是每当移入每一个数组要停止是时候产生一个全局变量k
                    2)当移入到要停止的那些li或者i上的时候让k = 1； 当移出这些的时候让k = 2；
                    3)然后在循环外边设置一个document.onmousemove 等于一个功能：if k = 1 的时候，那么我就关闭这个定时器，当k = 2 的时候，我就打开这个定时器； （我原本以为这样就大功告成了！！！然而我太天真）
                        因为我设置了一个全局变量k，当移出的时候k就会一直等于2了，所有定时器就会一直的打开新的一个，（我设置了先关闭在打开，所有一般不可能重复的产生很多个一样的），但是遇到了一个问题，只要我鼠标移动，k = 2，那么就会产生一个新的，先关闭的话那么就是只要鼠标动，定时器就一直是关的
                        所以产生的事情就是只要鼠标动，图片就不切换；
                    4)解决3的方法：就是再在if k = 2；的条件下：j ++ ，当 k = 3；的时候再打开定时器。这样就解决了重复的问题：
                            for循环里边的内容：
                                aSlideshowPhoto[i].onmouseenter = aIndicator[i].onmouseenter = function() {
                                    k = 1;
                                }   
                                aSlideshowPhoto[i].onmouseout = aIndicator[i].onmouseout = function() {
                                    // 1.当document.onmousemove的时候其实是没有产生新的k的，而是使用的这里传出的k
                                    k = 2;
                                }
                            for循环外边的类容：
                                timer1 = setInterval(oBtnNext.onclick,2000);
                                document.onmousemove = function () {
                                    console.log(k);
                                    if (k == 1) {
                                        clearInterval(timer1);
                                    } else if (k == 2) {
                                        k++;    // k + 1 让它不在进入这个if语句
                                        if (k == 3) {
                                            clearInterval(timer1);
                                            timer1 = setInterval(oBtnNext.onclick,2000);
                                        }
                                        // alert(k);
                                        // 2.所以在这里的时候k就已经变为3了，不会进入这个循环了，而只有当重新进入aSlideshowPhoto[i].onmouseout的时候，才会产生k=2；
                                    } 
        第五步：当鼠标进入到div里和小圆点的时候上下按钮显示出来，要注意的就是上下按钮自己的鼠标移动到自己上的时候自己要显示而且颜色改变，离开自己的时候也是颜色恢复
        第六步：是图片的淡入淡出：这个是js运动的内容，我暂时先不写，，主要是写运动框架我自己还拿不住，会出现很多错误。
        大部分的过程就在这里了。主要花的时间就在解决移入移出开关定时器那里了之后就是关于：after布局的知识我自己又去学了一遍。花了些时间，觉得下一次做的话应该就快很多了。还有就是运动部分等做网页移动到了那部分出现fixed导航栏的时候一起做
        以后可能加入了淡入淡出的时候会产生点击同一张的时候会闪动的问题，之后再写解决的方法，也是要用保存一个当前值，当点击时，值是当前的话，就不执行，如果是新的话，才改变（思想我记得是这样）
    18.onmouseleave与onmouseout区别：
        onmouseleave、onmouseenter，鼠标进入到指定元素区域内触发事件，不支持冒泡，不包含子元素的区域。
            这个再我写小圆点的时候用的enter，这样才可以点击到小圆点里面的类容
        onmouseout、onmouseover、鼠标进入指定元素触发事件，含子元素区域。
    19.还有就是遇到了webp图片格式：只要chrome支持这种格式，以后需要的时候去研究下
    20.js哪些的布尔值是真是假，总结一下，这个对于解决兼容以及很多问题很有用
            真：true 、 非零数字 、非空字符串 、 非空对象 、
            假：false 、 数字零 、 空字符串 、 空对象 、 undefined
            null是空
            判断是不是数字isNaN();
    21.js中节点的获取方式http://blog.csdn.net/laok_/article/details/75760572
    22.今天遇到一个问题：关于ie下input没有撑起来的兼容问题
            .search {
                width: 100%;    /* 我以为这里设置了100%下边就不用设置了 */
                height: 60px;
            }
            .search-w {
                position: relative;
                width: 100%;        /* 这里没写100%，ie下这个后边的input撑不起来 */
                height: 60px;
                overflow: hidden;
                z-index: 3;
            }
            .input-from input {这里边是绝对定位以及设置了input的width属性
        我发现的是，我上面设置了overflow：hidden，但是没有设置width为100%的时候，它内层的input竟然在ie系浏览器下都撑不起来，在火狐和chrome上都是正常的。明明后边设置的是绝对定位，竟然。
        所以下次再写定位的代码的时候：只要是设置了position的，都把width和height写上，还有就是看看是不是overflow的问题；
        我使用overflow的目的就是以为这个盒子我没有设置高和宽，但是又要让这个盒子撑起来，但是没想到里边的input没有撑起来。。。
    23.outline 和 border的区别 : outline不占用空间，还有就是input自带了outline样式的。
    24.发现一个问题：在ie低版本中，a标签下的img标签图片会带有边框：
        解决办法是：img{border:0 none},这样就可以了，注意两个一定都要写上去
    25.
    26.
    27.
    28.
    29.
        

自己的一些问题：
    1.我不知道什么时候用a, li, ul, dl  这几个都可以排列做列表菜单，但是我经常搞不懂要用哪个好
    2.自己css的命名完全乱套，到后边来了自己都不知道写的什么
    3.写的很慢，而且自己之前以为多余的div，到后面写js的时候那些都需要。又慢慢的加上去
    4.之前喜欢把全局的a都加为一种，结果在写到后边的时候发现根本不行，然后又把全局的a取消，在每个需要的下边设置a的单独样式，导致了时间的浪费以及自己之前哪些地方的a是什么样式也忘了
    5.而且我自己把js效果写出来之后，是自己都不知道自己写的什么，然后也不想去整理。。
    

兼容性：     能兼容：ie9 10 11 chrome ff还不知道没测试
            ie8一下box-shadow效果没有，一些排列宽度不对，还有就是不能获取js中未给值的var（这个应该可以给空来解决）；
            ie7：发现ie7和ie8 对inline-block都是不支持的，要解决兼容都需要设置块为block，float设为left或者right，同样不支持未给值的var
            ie6：ie6就不说了，整个布局都不行了，margin：0 auto；在ie6下基本是不能用的，解决的话应该要用table去重新布局，或者使用之前我看到的把整个页面设置在一个table单元格里，还有就是用绝对定位
响应式布局： 因为这个网站使用了1190和990两个宽度，但是我感觉我做1190都有点吃力了，虽然990只是在1190的基础上display：none中间的一些div和改变wrapper的宽度值，但是我在布局初期的时候有些div没有考虑到，所以实现起来有点难。做的差不多了之后再去改响应式
            而且京东解决ie6/7/8的问题是用的一个新的index主页来解决的。
            手机网站使用的跳转的方法吧。

17.12.25：今天主要就是在找怎么做那个一二级菜单看起来像一块的做法；然后补充了二级菜单的一些东西，就奔没有做什么（太菜了！好慢）
17.12.26: 今天主要把下边聚焦左边的导航栏的显示离开效果做了，
                1.菜单的写法不能直接用在顶部导航栏的写法，因为一级菜单和二级要出现的菜单没有在一个容器里，所以我用了定时器来解决这个问题
                2.菜单中感觉比较混乱，我都不知道自己children和parent怎么用到哪些上了，就这样去试的。
                3.掌握到inline-block很好用； 还有a标签直接用来写连接的文字，设定好padding，变为block就很好办了，而且也不会产生挤出去的情况；
                4.css3中选择器的一些使用，比如last-child；
          还做了一个就是关于地区里边我把它进一步的改了一下：出现点击的颜色，还有一个就是根据点击来更换导航栏上的地址文字，以及当文字为3个的时候不让文字被挤下来；
17.12.26：计划做的内容：1.把fs里的第二个：图片轮播做了，如果还有时间的话就解决一下顶部导航栏每个li的间距问题
17.12.26-28：都在写轮播而且在解决一些兼容问题。
17.12.29：在做后边的一些和前边留下的
17.12.30：越做就越否定自己，越做就感觉自己什么都不会，越做就越迷茫，坚持把这个大概的仿了，
            今天就做了一个关于右边的选项卡功能，本来很简单的一个东西，我觉得真的做的话可能就一二十分钟就做出来了的，做熟悉了的话就10分钟的东西，结果自己做了一天
                因为集中不了精神，一会儿就去搜索css里的动画，关于曲线运动的知识去了，然后自己又不会，然后就迷茫，踌躇。